tags = [
  { id = "ml", name = "AI/Machine Learning" },
  { id = "sec", name = "Software Security" },
  { id = "lead", name = "Leadership" },
  { id = "sys", name = "System Architecture" },
]

#----------------------------------------------------------#
# Comulate                                                 #
#----------------------------------------------------------#
[[companies]]
name = "Comulate"
start = 2024-02-20T12:00:00Z
location = "Remote"

[[companies.positions]]
tags = []
name = "Software Engineer"

[[companies.positions.notables]]
tags = []
desc = """
Reverse-engineered proprietary APIs and complex authentication flows, enabling
seamless integration with legacy client systems.
"""
details = """
Reverse-engineered two complex, proprietary systems—Applied Epic and Vertafore
AMS360, both leading Agency Management Systems in the insurance space.

For Epic, I unraveled a highly stateful web architecture where the backend
expected the frontend to cache and maintain UI metadata. This required
replicating frontend behavior through a precise series of backend calls to mimic
specific UI workflows. Initially, we captured credentials using a Chrome
extension, and later transitioned to browser automation with dedicated logins to
retrieve dynamic headers, which were then passed to our backend mimic service.

AMS360 was entirely different. It required the desktop Windows app to be
installed in order to interact with the web application. Basic data retrieval
occurred via the browser, but editing actions spawned native Windows popups that
initiated SOAP requests. I used `mitmproxy` and custom parsers to intercept and
reverse-engineer these dense, undocumented SOAP payloads. Determining the
correct entity creation order and associations was painstaking, especially due
to vague action names and strict locking mechanisms that could deadlock data for
all users if misused.

This work enabled direct integration with systems that lacked usable APIs. For
Epic, it unlocked direct posting of "premium payable" statements from our
platform. For AMS360, it reduced a multi-step, error-prone manual process into a
one-click operation, significantly improving user experience and reducing
operational friction.
"""

[[companies.positions.notables]]
tags = []
desc = """
Built and maintained large-scale scraping system for 20+ insurance carriers,
automating financial data retrieval and reducing customer manual workflows by
hours per month.
"""
details = """
Designed and implemented a robust, scalable scraping framework responsible for
automatically retrieving financial statements from 20+ major insurance carriers,
including Aetna, Cigna, and Unum. Early scrapers used Puppeteer; later efforts
migrated to Playwright for improved ergonomics and reliability.

Scrapers ran daily via BullMQ job queues with cron-style schedules. Each
execution instantiated a clean, isolated browser session per credential set.
Login automation relied on customer-supplied credentials stored securely in
Comulate Vault (encrypted at rest). MFA was handled using two customer
onboarding steps: 1) forwarding OTP-related emails to a monitored inbox, and 2)
routing SMS codes to a Comulate-managed phone number.

Scraped documents (PDF, CSV, XLSX) were normalized through existing statement
ingestion pipelines, which ensured deduplication and enrichment. This data
flowed directly into Comulate’s accounting system, where accountants mapped it
to policy-level records and posted results to AMS systems—replacing manual
download-and-upload workflows.

Developed custom monitoring via Datadog with alerts and dashboards segmented by
portal, org, and credential. Metrics included statement volume, failures, upload
rate, and invalid credential flags. This gave near-instant visibility into
scraping health and allowed targeted triage by portal.

The work saved customers hours per month by automating extremely brittle,
inconsistent, and legacy UIs—many of which had no APIs and aggressive
anti-automation measures. Reached the strategic milestone of covering the top
20% of portals (by statement volume), drastically reducing manual labor across
the customer base.
"""

[[companies.positions.notables]]
tags = []
desc = """
Cut test infrastructure costs by over 90% by enforcing memory constraints in
Jest via version upgrades, allowing migration to smaller CI runners and faster
test execution.
"""
details = """
Investigated escalating resource usage in CI and test environments driven by our
Node.js test suite (Jest). Identified that memory limit settings in the Jest
config were silently ignored due to an outdated version.

Upgraded Jest and verified the memory constraints were now enforced, reducing
per-worker usage and enabling us to move from expensive 64GB CI runners to
cost-effective 4GB machines. This also dropped test run times from 15 minutes to
~7 minutes. Although the underlying memory leak was not fully resolved, the
configuration fix alone led to substantial savings and improved dev feedback
loops.
"""


[[companies.positions.notables]]
tags = []
desc = """
Reduced p99 latency from 30+ seconds to under 3s across key GraphQL endpoints by
diagnosing and optimizing slow PostgreSQL queries using tracing and indexing
strategies.
"""
details = """
Led a broad performance effort targeting backend latency in customer-facing
dashboards built on NestJS and GraphQL. Focused on high-p99 queries that were
timing out or stalling the UI, particularly those supporting real-time analytics
and financial summaries.

Analyzed production traces, database logs, and application-layer metrics to
isolate the slowest SQL queries. Used PostgreSQL’s `EXPLAIN (ANALYZE)` along
with custom instrumentation to understand join patterns, filter selectivity, and
index usage. Rewrote problematic queries to avoid nested subqueries, added
multi-column indexes, and restructured access patterns to minimize redundant
data access.

The work brought multiple endpoints from 30+ seconds to sub-3-second p99
latencies, significantly improving responsiveness for users and reducing error
rates across the board. These improvements also stabilized background jobs that
reused the same queries for scheduled reports and exports.
"""

[[companies.positions.notables]]
tags = []
desc = """
Led PostgreSQL instance size upgrade to resolve scaling bottlenecks,
coordinating a high-risk migration with minimal downtime during peak traffic
periods.
"""
details = """
Led the upgrade of our primary PostgreSQL server to a 4x larger instance after
sustained performance issues made it clear that our previous instance class
could no longer support peak usage. This effort followed weeks of intensive
query optimizations that reduced pressure but couldn’t offset underlying scaling
limits.

Prepared for the upgrade by identifying high-risk queries, reducing lock
contention, and performing shadow benchmarking on cloned environments.
Coordinated with stakeholders to define a tight upgrade window with clear
rollback and recovery plans.

Executed the upgrade with brief planned downtime, during which we observed
significantly improved stability and headroom post-migration. This eliminated
daily fire drills around slow queries and allowed us to redirect engineering
energy away from triage and back toward product delivery.

We also documented and shared lessons learned across the team, including how we
used query patterns and contention graphs to prioritize scale strategies.
"""

[[companies.positions.notables]]
tags = []
desc = """
Owned remediation of low-severity security findings from external penetration
test, supporting SOC 2 compliance with minimal disruption and full retest
validation.
"""
details = """
Led the remediation of multiple findings from an external penetration test,
contributing to Comulate’s broader SOC 2 compliance efforts. Although the issues
were classified as low severity, they spanned multiple subsystems and required
targeted investigation and resolution.

Addressed third-party dependency vulnerabilities, network-layer configuration
issues, and gaps in platform-level security headers. Work included evaluating
risk exposure, implementing fixes, and verifying behavior across staging and
production environments. Where appropriate, certain findings were assessed and
deprioritized based on mitigation strategies and low practical impact.

All fixes were tracked through internal systems, followed by a successful retest
by the external firm. I owned the remediation process end-to-end despite not
having authored the original implementations, ensuring the engineering team
maintained a strong security posture with minimal disruption.
"""

[[companies.positions.notables]]
tags = []
desc = """
Built a direct database syncing system to resolve unreliable change-event-based
integrations and ensure complete, consistent Book of Business data.
"""
details = """
Replaced a fragile change-event integration that frequently missed
updates—causing data gaps and manual intervention for users—with a robust,
database-driven syncing system.

Designed and implemented a new pipeline that connects directly to the external
system’s database (when available), bypassing the unreliable event stream. Built
a diffing and backfill engine to reconcile records between systems, syncing only
missing or out-of-date data to minimize load.

The system significantly improved trust and reduced manual sync requests from
users. Careful handling of access (typically via customer-managed VPNs) and
targeted test coverage ensured the solution was reliable and production-safe
across customer environments.
"""


#----------------------------------------------------------#
# Sabbatical                                               #
#----------------------------------------------------------#
[[companies]]
name = "Independent Projects"
start = 2021-12-01T12:00:00Z
end = 2024-02-20T12:00:00Z
location = "Statesville, NC"
desc = """
Took time away from full-time employment for personal reasons during the
pandemic and family caregiving, while pursuing intensive hands-on engineering
and self-directed technical projects.
"""

[[companies.positions]]
name = "Engineer / Builder / Mad Scientist"
tags = []

[[companies.positions.notables]]
tags = ["eng", "dev", "design"]
desc = """
Created a remote-controlled lawn mower using Rust, C, and a Teensy MCU, with
custom-designed cycloidal gearing.
"""

[[companies.positions.notables]]
tags = ["eng", "design"]
desc = """
Designed a pressure-fit, carbon-fiber 3D printer toolhead to eliminate fasteners
and reduce mass.
"""

[[companies.positions.notables]]
tags = ["sys", "dev"]
desc = """
Developed an experimental, Entity-Component-System event database optimized for
lightweight web services.
"""

# [[companies.positions.notables]]
# tags = ["dev", "fin"]
# desc = "Designed a cryptocurrency trade backtesting system from scratch using Python."
#
# [[companies.positions.notables]]
# tags = ["eng", "mod"]
# desc = """
# Constructed a high-speed 3D printer from parts, adapting the original design for
# enhanced movement speed and flow rates.
# """

#----------------------------------------------------------#
# LIVERAMP                                                 #
#----------------------------------------------------------#
[[companies]]
name = "LiveRamp"
start = 2016-08-15T12:00:00Z
end = 2021-12-01T12:00:00Z
location = "New York, NY / San Francisco, CA"

[[companies.positions]]
tags = []
name = "Principal Product Security Engineer"
start = 2020-06-01T12:00:00Z
end = 2021-12-01T12:00:00Z

[[companies.positions.notables]]
desc = "Developed a GitHub integration for easy setup of automated, security-centric code scanning."
tags = ["sec", "sys"]

[[companies.positions.notables]]
desc = "Organized external penetration testing, collaborating with multiple teams."
tags = ["sec"]

[[companies.positions.notables]]
desc = "Managed, supervised, and reviewed security bug resolutions across various teams."
tags = ["sec", "lead"]

[[companies.positions.notables]]
desc = "Oversaw code, architecture, and product proposal reviews for security integrity."
tags = ["sec", "lead"]

[[companies.positions.notables]]
desc = "Championed engineering-wide security training initiatives."
tags = ["sec", "lead"]

[[companies.positions]]
tags = []
name = "Tech Lead & Engineering Manager"
start = 2018-05-01T12:00:00Z
end = 2020-06-01T12:00:00Z

[[companies.positions.notables]]
desc = "Successfully led the migration from co-located servers and AWS to Google Cloud for all full-stack teams."
tags = ["lead", "sys"]

[[companies.positions.notables]]
desc = "Pioneered a container-based solution for seamless integration of zero-trust authentication, requiring minimal code adjustments."
tags = ["sec", "sys"]

[[companies.positions.notables]]
desc = "Architectured and spearheaded a unified security infrastructure to consolidate disparate logins and APIs."
tags = ["sec", "sys"]

[[companies.positions.notables]]
desc = "Directed the creation of a new JavaScript component library, enabling front-end engineers to efficiently develop standards-compliant web applications."
tags = ["lead", "sys"]

[[companies.positions.notables]]
desc = "Engineered a comprehensive authorization system for refined control across all services and web apps."
tags = ["sys", "sec"]

[[companies.positions.notables]]
desc = "Spearheaded the design and implementation of a unified token-based authentication system for single sign-on and API access across all platforms."
tags = ["sys", "sec", "lead"]

[[companies.positions.notables]]
desc = "Directed the transition of apps and services to the new authentication framework."
tags = ["lead", "sys"]

[[companies.positions.notables]]
desc = "Established and directed a top-performing engineering team, recognized for its outstanding productivity and high morale."
tags = ["lead"]

[[companies.positions]]
tags = []
name = "Senior Software Engineer"
start = 2016-08-15T12:00:00Z
end = 2018-05-01T12:00:00Z

[[companies.positions.notables]]
tags = []
desc = """
Mentored multiple teams via presentations, live demos, pair programming, and collaborative coding sessions, emphasizing testing, code reviews, and software design best practices.
"""

[[companies.positions.notables]]
tags = []
desc = """
Directed the team responsible for designing Arbor's reporting user interface.
"""

#----------------------------------------------------------#
# STEINBAUER                                               #
#----------------------------------------------------------#
[[companies]]
name = "Steinbauer Performance"
start = 2010-10-15T12:00:00Z
end = 2016-08-12T12:00:00Z
location = "Charlotte, NC / Wartberg, Austria"

[[companies.positions]]
name = "Full-Stack Software Engineer"
tags = []
desc = """
* Acted as the lead full-stack software engineer
responsible for all web-based applications, reporting directly to the
president of the company.
* Conducted interviews for, guided, and supervised junior engineers.
Traveled often between Europe and the US, lived more than one year in Austria.
"""

[[companies.positions.sections]]
title = "Website Development and E-commerce"
[[companies.positions.sections.notables]]
desc = "Developed a comprehensive STEINBAUER website with multi-currency, multi-lingual support, integrating e-commerce, custom search, content management, newsletter generation, and more."
tags = ["sys"]

[[companies.positions.sections.notables]]
desc = "Built supplementary services including PDF rendering, asynchronous task management, and Redis caching."
tags = ["sys"]

[[companies.positions.sections.notables]]
desc = "Created a service for product and pricing synchronization from the previous ERP system."
tags = ["sys"]

[[companies.positions.sections]]
title = "Vehicle Fleet and Data Streaming"
[[companies.positions.sections.notables]]
desc = "Designed and implemented a vehicle fleet data streaming service using Go and gRPC, supporting real-time data processing and commands like door locking and fault code clearance."
tags = ["sys"]

[[companies.positions.sections.notables]]
desc = "Constructed the isomorphic web UI for fleet management using React.js, Redux, and Node.js, offering both live and historical data views."
tags = ["sys"]

[[companies.positions.sections.notables]]
desc = "Developed a Java client library for fleet services utilized in vehicle hardware and for Android network benchmarking."
tags = ["sys"]

[[companies.positions.sections]]
title = "Authentication and Security"
[[companies.positions.sections.notables]]
desc = "Established an oAuth2 endpoint using JWT tokens and EC DSA for robust microservice authentication."
tags = ["sec"]

[[companies.positions.sections.notables]]
desc = "Crafted a global monitoring system for production/testing equipment with advanced encryption, asynchronous protocols, and a user-friendly web interface."
tags = ["sec", "sys"]

[[companies.positions.sections]]
title = "ERP System Migration and Management"
[[companies.positions.sections.notables]]
desc = "Spearheaded the migration of the parent company's ERP system from Sage Office Line to Odoo."
tags = ["lead", "sys"]

[[companies.positions.sections.notables]]
desc = "Collaborated with department heads across sales, purchasing, manufacturing, and accounting to refine Odoo's source code and customize it for our unique supply chain."
tags = ["lead", "sys"]

[[companies.positions.sections]]
title = "APIs and Additional Services"
[[companies.positions.sections.notables]]
desc = "Designed RESTful APIs for software licensing, firmware management, remote logging, and more."
tags = ["sys"]

[[companies.positions.sections.notables]]
desc = "Developed a computer vision project for TÜV certificate scanning, and an offline web search tool using a ternary search tree."
tags = ["ml", "sys"]

[[companies.positions.sections.notables]]
desc = "Created a Chrome app to print product barcodes for Zebra printers."
tags = ["sys"]


# [[companies.positions.notables]]
# tags = []
# desc = """
# Built a new STEINBAUER website; A multi-national, multi-currency,
# multi-lingual web app with vehicles, products, pricing, a custom search
# engine, e-commerce features, documents, warranty registration, a product
# news generator, hardware log management and graphing, software user and
# license management, newsletter generation, i18n mail queuing, content
# management, and more.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Designed and built a vehicle fleet data streaming service in Go
# using gRPC. It features data processing, live streaming via web
# sockets, an API for stored data, and the ability to push commands
# (lock doors, clear fault codes) to a vehicle.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Built the isomorphic web app UI for the fleet service using
# React.js, Redux, and Node.js. It features live and historical
# views of the data, vehicle management, live map view of the fleet,
# and a separate web app for workshops to document inspections
# and service.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Built a client library in Java for the fleet service, used in
# the vehicle hardware, and an Android app to benchmark mobile
# networks.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Built an oAuth2 endpoint with JWT tokens and EC DSA signing for
# for secure and stateless microservice authentication.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Designed and built a system for using and monitoring production and
# testing equipment placed around the world. The system features a custom
# asynchronous protocol (msgpack, ZeroMQ), an encryption layer with forward
# secrecy (libsodium), an asynchronous python server (python, gevent),
# a client library for the hardware (C#), and a web front-end (angular,
# web sockets).
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Led the massive effort of migrating the ERP system of
# the parent company and all subsidiaries from Sage Office Line (SQL
# Server, entirely German database) to Odoo (Linux, Python, PostgreSQL).
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Worked with directly with all other department heads to deliver fixes
# for bugs in Odoo's original source code and new features tailored to
# the company's unique, vertical supply chain. This involved sales,
# purchasing, warehouse, manufacturing, firmware, and accounting.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Designed and built auxiliary services for the web site such as PDF
# rendering, asynchronous task running and scheduling, and redis
# caching.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Built service to synchronize product and pricing info from old ERP to
# the website. Featured custom signing and encryption before libsodium.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Designed and built REST APIs for software license management and updates,
# firmware management, remote logging product data from iPad or desktop
# apps, and more.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Extra projects included using computer vision and OCR to scan TÜV
# certificates, building a ternary search tree python indexer and
# JavaScript searcher for fast, offline web search, and a Chrome app to
# print product bar-code labels to Zebra printers via ZPL.
# """
# [[companies.positions.notables]]
# tags = []
# desc = """
# Migrated Odoo development from a single-engineer-workflow to a team
# project using Vagrant and Gitlab.
# """

#----------------------------------------------------------#
# ShiftSource
#----------------------------------------------------------#
[[companies]]
name = "ShiftSource"
start = 2010-10-15T12:00:00Z
end = 2016-08-12T12:00:00Z
location = "Statesville, NC"

[[companies.positions]]
name = "President, Full-Stack Software Engineer"
start = 2010-10-15T12:00:00Z
tags = []
summary = """
"""
[[companies.positions.notables]]
tags = []
desc = """
Designed and built a site for client, Green Power South, with a blog,
a gallery, and a custom-built widget using NOAA data to estimate solar
energy and value for the day. Used Django and Python.
"""
[[companies.positions.notables]]
tags = []
desc = """
Designed and built real estate web app and site for client, Savon
Realty, which parsed, normalized, and indexed data from the
Charlotte-Mecklenburg Listing Service to provide faceted search for
listings. Featured PHP, Zend Framework, jQuery, Python, and
SQLAlchemy.
"""
[[companies.positions.notables]]
tags = []
desc = """
Redesigned and rebuilt the Savon Realty front-end using Django and
AJAX to improved user experience and to increase navigation speed by 50%.
"""
[[companies.positions.notables]]
tags = []
desc = """
Designed and built a site to resell web templates and web hosting for
my own company, Shift Source. Hand-built with PHP 4 and MySQL.
"""
[[companies.positions.notables]]
tags = []
desc = """
Sourced, designed, built, sold, and installed PC-based digital
surveillance systems locally.
"""

#----------------------------------------------------------#
# Green Power South
#----------------------------------------------------------#
[[companies]]
name = "Green Power South"
start = 2010-01-01T12:00:00Z
end = 2010-10-01T12:00:00Z
location = "Statesville, NC"

[[companies.positions]]
tags = []
name = "Vice President"
# start = 2020-06-01T12:00:00Z
# end = 2021-12-01T12:00:00Z

[[companies.positions.notables]]
tags = []
desc = """
Created project estimates for solar panel installations including tax
incentives, parts, labor, and estimated photo-voltaic energy
production. 
"""

#----------------------------------------------------------#
# East 77 Contractors
#----------------------------------------------------------#

[[companies]]
name = "East 77 Contractors"
start = 2008-09-01T12:00:00Z
end = 2010-10-01T12:00:00Z
location = "Statesville, NC"

[[companies.positions]]
tags = []
name = "Construction Manager"
# start = 2020-06-01T12:00:00Z
# end = 2021-12-01T12:00:00Z

[[companies.positions.notables]]
tags = []
desc = """
Designed floor plans for up-fits and renovations, produced complete
sets of construction drawings, and managed construction. 
"""

#----------------------------------------------------------#
# Adams + Associates Architecture
#----------------------------------------------------------#

[[companies]]
name = "Adams + Associates"
start = 2007-01-01T12:00:00Z
end = 2008-09-01T12:00:00Z
location = "Statesville, NC"

[[companies.positions]]
tags = []
name = "CAD Technician, Graduate Architect"
# start = 2020-06-01T12:00:00Z
# end = 2021-12-01T12:00:00Z

[[companies.positions.notables]]
tags = []
desc = """
Produced 3D models of 600,000 sqft shopping centers. Coordinated with
engineers and produced complete construction documents. 
"""

[[companies.positions.notables]]
tags = []
desc = """
Wrote Ruby plugin for Google SketchUp to automate parking lot layout,
reducing model production time by 2-20 hours per project. 
"""

#----------------------------------------------------------#
#----------------------------------------------------------#
# Education & Professional Development
#----------------------------------------------------------#
#----------------------------------------------------------#

[[education]]
name = "Machine Learning Engineer Nanodegree"
location = "Udacity"
end = 2017-05-01T12:00:00Z
tags = []
desc = ""

[[education]]
name = "Discrete Optimization, University of Melbourne"
sub = "Inaugural online course"
location = "ml-class.org"
end = 2013-08-01T12:00:00Z
tags = []
desc = """
Went beyond the parameters of the class, explored published
research and wrote highly optimized programs in C and
Go using genetic algorithms, completing the course “with
Distinction.” 
"""


[[education]]
tags = []
name = "Machine Learning, Stanford University"
sub = "Inaugural online course"
location = "ml-class.org"
end = 2011-12-01T12:00:00Z
desc = """
Completed with a grade of 100% 
"""


[[education]]
name = "Intro to Artificial Intelligence, Stanford University"
sub = "Inaugural online course"
location = "ai-class.org"
end = 2011-12-01T12:00:00Z
tags = []
desc = """
Completed course in top 10% of students, "with distinction." 
"""

[[education]]
name = "Mitchell Community College"
location = "Statesville, NC"
end = 2008-05-01T12:00:00Z
desc = """
*A.S., Mathematics*, 2008  
*A.A.*, 2005
"""
